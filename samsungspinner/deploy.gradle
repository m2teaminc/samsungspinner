apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def artifact = new Properties()
artifact.load(project.file('deploy.properties').newDataInputStream())

version = artifact.version
group = artifact.groupId

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId artifact.groupId
            artifactId artifact.id
            version artifact.version
            name artifact.id // pom.project.name must be same as bintray.pkg.name
            url artifact.siteUrl
            inceptionYear '2018' // HARDCODED
            licenses {
                license { // HARDCODED
                    name 'GPL-3.0'
                    url 'https://www.gnu.org/licenses/gpl.txt'
                    distribution 'repo'
                }
            }
            scm {
                connection artifact.gitUrl
                developerConnection artifact.gitUrl
                url artifact.siteUrl
            }
        }
    }
}
Properties properties = new Properties()
File fname = project.rootProject.file('local.properties')
if (fname.exists()) {
    properties.load(fname.newDataInputStream())
}

bintray {
    user = System.getenv("BINTRAY_USER") ?: properties.getProperty("bintray.user")
    key = System.getenv("BINTRAY_API_KEY") ?: properties.getProperty("bintray.apikey")
    //deployRoot = deployProperties["${System.properties.jobName}.deployroot"]
    //deploydir = deployProperties["${System.properties.jobName}.deploydir"]
    configurations = ['archives']
    pkg {
        repo = "library"
        name = artifact.id
        websiteUrl = artifact.siteUrl
        vcsUrl = artifact.gitUrl
        licenses = artifact.licenses
        publish = true
        version {
            name = artifact.version
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
}